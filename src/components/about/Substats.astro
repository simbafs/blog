---
import { socialLinks, type iconsType } from 'astro-pure/types'
import { Icon } from 'astro-pure/user'

interface SubstatsItem {
  platform: string
  icon: (typeof socialLinks)[number]
  color?: string
  link?: string
  text: string
  api?: string
  count?: number
}

type Props = {
  stats: SubstatsItem[]
}

const { stats } = Astro.props as Props

async function fetchCount(item: SubstatsItem) {
  if (!item.api) return
  try {
    // TODO: make my own api
    const response = await fetch(`https://api.swo.moe/stats/${item.api}`)
    const data = await response.json()
    if (data.failed) {
      throw new Error(data.message)
    } else {
      item.count = data.count
    }
  } catch (error) {
    console.error('Error in Substatus fetching: ' + error)
  }
}

await Promise.all(stats.map(fetchCount))
---

<div class='grid grid-cols-1 gap-3 rounded-xl border p-2 sm:grid-cols-2 sm:p-3'>
  {
    stats.map(({ link, platform, icon, color, count, text }) => (
      <a
        class='group text-muted-foreground no-underline'
        href={link}
        target='_blank'
        rel='noopener noreferrer'
      >
        <div class='flex items-center gap-3 rounded-lg border border-transparent px-3 py-2 transition-all hover:border-border hover:bg-muted'>
          {icon && <Icon name={icon as iconsType} color={color} />}
          <div class='flex-1 text-foreground transition-colors group-hover:text-primary'>
            {platform}
          </div>
          {count ? (
            <div class='flex items-center gap-1.5'>
              <samp>{count}</samp>
              <span class='text-sm font-normal'>{text}</span>
            </div>
          ) : (
            ''
          )}
        </div>
      </a>
    ))
  }
</div>
<div class='mt-2 text-right text-sm'>
  Display real-time; powered by <a
    class='text-muted-foreground'
    href='http://github.com/spencerwooo/substats'
    target='_blank'
    rel='noopener noreferrer'>Substats</a
  >
</div>
